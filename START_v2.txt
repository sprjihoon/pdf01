================================================================
 PDF Excel Matcher v2.0 - 빠른 시작 가이드
================================================================

🎯 이 프로그램은 무엇을 하나요?
----------------------------------------------------------------
엑셀 파일의 구매자 정보(이름+전화번호+주소)를 기준으로
PDF 페이지를 자동으로 정렬합니다.

✅ 3가지 정보가 모두 일치하는 페이지를 찾아서
✅ 엑셀 순서대로 PDF를 재정렬합니다!


📋 필요한 것
----------------------------------------------------------------
1. Windows 10/11
2. Python 3.8 이상 (권장: Python 3.11)
   다운로드: https://www.python.org/downloads/


🚀 가장 빠르게 시작하기
================================================================

[방법 1] 개발 모드 실행 (바로 테스트)
----------------------------------------------------------------
1. 명령 프롬프트(CMD) 열기
   (시작 → "cmd" 입력 → Enter)

2. 이 폴더로 이동:
   cd "c:\Users\user\pdf 정렬"

3. 다음 명령어들을 순서대로 실행:

   python -m venv .venv
   .venv\Scripts\activate
   pip install -r requirements.txt
   python main.py


[방법 2] EXE 파일로 빌드 (배포용)
----------------------------------------------------------------
1. 위 방법 1의 1-2번 먼저 실행

2. EXE 빌드:
   .venv\Scripts\activate
   build.bat

3. 완성!
   dist\PDFReorderApp.exe 파일을 실행하세요


📖 프로그램 사용법
================================================================

[1단계: 파일 선택]
   ① 엑셀 파일 선택 (구매자명, 전화번호, 주소 컬럼 필요)
   ② PDF 파일 선택 (텍스트 기반 PDF)
   ③ 출력 폴더 선택 (결과 저장 위치)

[2단계: 매칭 옵션]
   ① 기본: 정확 일치만 (권장)
   ② 유사도 매칭: 오타나 표기 차이 있을 때
      - 체크박스 활성화
      - 임계값 조정 (기본 90%)

[3단계: 실행]
   - "PDF 정렬 실행" 버튼 클릭!
   - 진행 상황을 로그에서 확인

[4단계: 결과 확인]
   - ordered_YYYYMMDD.pdf: 정렬된 PDF
   - ordered_YYYYMMDD_match_report.csv: 상세 리포트


📊 엑셀 파일 형식
================================================================
엑셀 파일의 첫 번째 행에 다음 컬럼이 필요합니다:

| 구매자명 | 전화번호 | 주소 |
|----------|----------|------|
| 홍길동   | 010-1234-5678 | 서울시 강남구 테헤란로 123 |
| 김철수   | 010-9876-5432 | 부산시 해운대구 센텀로 456 |

※ 컬럼명은 유사한 이름도 인식됩니다:
   - 구매자명: "이름", "성명", "name", "buyer" 등
   - 전화번호: "연락처", "핸드폰", "phone", "mobile" 등
   - 주소: "배송지", "address", "addr" 등


📄 PDF 파일 조건
================================================================
✅ 텍스트 추출이 가능한 PDF
   (워드, 한글에서 PDF로 저장한 파일)

❌ 이미지 스캔 PDF
   (스캐너로 스캔한 파일은 지원하지 않음)

각 페이지에 구매자명, 전화번호, 주소가 포함되어야 합니다.


💡 매칭 기준
================================================================
다음 3가지 정보가 모두 일치해야 매칭됩니다:

1. 구매자명
   - 공백, 특수문자 무시
   - "홍 길동" = "홍길동"

2. 전화번호
   - 하이픈 무시
   - "010-1234-5678" = "01012345678"

3. 주소
   - 괄호, 쉼표, 하이픈 무시
   - "서울시 강남구 (테헤란로 123)" = "서울시강남구테헤란로123"


📝 출력 파일
================================================================
출력 폴더에 다음 2개 파일이 생성됩니다:

1. ordered_YYYYMMDD.pdf
   - 정렬된 PDF 파일
   - 매칭된 페이지: 엑셀 순서대로
   - 미매칭 페이지: 원본 순서대로 맨 뒤에

2. ordered_YYYYMMDD_match_report.csv
   - 매칭 결과 상세 리포트
   - 엑셀에서 열어서 확인 가능

※ 같은 날 여러 번 실행하면:
   ordered_20250109.pdf
   ordered_20250109_v2.pdf
   ordered_20250109_v3.pdf
   ...자동으로 버전 증가


❓ 문제 해결
================================================================

[문제] Python이 없다는 오류
해결: Python 설치
      https://www.python.org/downloads/
      설치 시 "Add Python to PATH" 체크!

[문제] 패키지 설치 실패
해결: - 인터넷 연결 확인
      - 관리자 권한으로 실행

[문제] "컬럼을 찾을 수 없습니다"
해결: 엑셀 파일의 첫 번째 행에 컬럼 이름 확인
      "구매자명", "전화번호", "주소" 필요

[문제] "이미지 스캔 PDF로 판단됩니다"
해결: 텍스트 추출이 가능한 PDF 사용
      (워드나 한글에서 PDF로 저장)

[문제] 매칭률이 낮음
해결: - 유사도 매칭 켜기
      - 임계값 낮추기 (90% → 80%)
      - 리포트 CSV에서 원인 확인


📚 더 많은 정보
================================================================
- README_v2.md: 상세한 기능 설명
- 파일 구조:
  * main.py: GUI 프로그램
  * matcher.py: 매칭 로직
  * io_utils.py: 파일 처리
  * requirements.txt: 패키지 목록
  * build.bat: EXE 빌드 스크립트


🎉 준비 완료!
================================================================
이제 다음 명령으로 프로그램을 실행하세요:

   python main.py

또는 build.bat를 실행하여 EXE 파일을 만드세요!


================================================================
개발: Cursor AI
버전: 2.0.0
날짜: 2025-10-09
================================================================

